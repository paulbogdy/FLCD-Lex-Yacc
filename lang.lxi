%{
#include <string.h>
#include <stdlib.h>
#include "y.tab.h"
int line_count = 0;
%}
%option noyywrap

DELIM ([ \t])
WHITESPACES ({DELIM}+)
LETTER ([a-zA-Z])
DIGIT ([0-9])
IDENTIFIER ({LETTER}({LETTER}|{DIGIT})*)
NONZERO ([1-9])
NUMBER (0|{NONZERO}{DIGIT}*)

%%

\n  {
        ++line_count;
    }

"<=" { return SE; }
">=" { return GE; }
"&" { return AND; }
"|" { return OR; }
"==" { return EQ; }
"!=" { return DIF; }
"+" { return PLUS; }
"-" { return MINUS; }
"*" { return MUL; } 
"/" { return DIV; }
"%" { return MOD; }
"=" { return ASSIGN; }
"<" { return SM; }
">" { return GR; }

":" { return COLON; }
"{" { return OPENCURLY; }
"}" { return CLOSEDCURLY; }
"[" { return OPENSQARED; }
"]" { return CLOSEDSQARED; }
"(" { return OPEN; }
")" { return CLOSED; }
"," { return COMMA; }

if { return IF; }
else { return ELSE; }
while { return WHILE; }
for { return FOR; }
int { return INT; }
char { return CHAR; }
bool { return BOOL; }
func { return FUNC; }
master { return MASTER; }
None { return NONE; }
mut { return MUT; }
read { return READ; }
write { return WRITE; }

True { return TRUE; }
False { return FALSE; }

{WHITESPACES} { ; }

{IDENTIFIER} { return ID; }
{NUMBER} { return NUM; }
"'"."'" { return CHARACTER; }
.   { 
        printf("\nSyntax Error on Line %d\n", line_count);
    }

%%

/* The function yywrap() int yywrap(){return 1;} */
